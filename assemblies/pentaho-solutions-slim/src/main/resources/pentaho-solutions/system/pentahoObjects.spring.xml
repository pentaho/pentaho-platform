<?xml version="1.0" encoding="UTF-8"?>
<!-- 
This is a Spring file that defines how Pentaho system objects are created and managed.  
An implementation of IPentahoObjectFactory, such as WebSpringPentahoObjectFactory, is 
responsible for serving objects to callers based on this file.

Possible values for scope attribute:
*singleton* - each request for this object returns the same instance
*prototype* - each request for this object returns a new instance
*session* - each request for this object within a session returns the same instance

default-lazy-init is set to true since some of these object make calls into 
PentahoSystem which is initialized after Spring
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd 
       http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd" default-lazy-init="true" >

  <bean id="ISolutionEngine" class="org.pentaho.platform.engine.services.solution.SolutionEngine" scope="prototype"/>

  <bean id="IPluginProvider" class="org.pentaho.platform.plugin.services.pluginmgr.SystemPathXmlPluginProvider"
        scope="singleton"/>

  <bean id="IPluginManager" class="org.pentaho.platform.plugin.services.pluginmgr.PentahoSystemPluginManager"
        scope="singleton"/>
  <bean id="IPluginResourceLoader" class="org.pentaho.platform.plugin.services.pluginmgr.PluginResourceLoader"
        scope="singleton"/>
  <bean id="IPluginPerspectiveManager"
        class="org.pentaho.platform.plugin.services.pluginmgr.perspective.DefaultPluginPerspectiveManager"
        scope="singleton"/>
  <bean id="IServiceManager" class="org.pentaho.platform.plugin.services.pluginmgr.servicemgr.DefaultServiceManager"
        scope="singleton">
    <property name="serviceTypeManagers">
      <list>
        <ref bean="axisServiceManager"/>
      </list>
    </property>
  </bean>
  <bean id="ITempFileDeleter" class="org.pentaho.platform.web.http.session.SessionTempFileDeleter" scope="prototype"/>

  <bean id="axisServiceManager" class="org.pentaho.platform.plugin.services.pluginmgr.servicemgr.AxisWebServiceManager"
        scope="singleton"/>

  <!-- actual bean defined in repository.spring.xml; aliased here -->
  <alias name="unifiedRepository" alias="IUnifiedRepository"/>

  <!-- actual bean defined in repository.spring.xml; aliased here -->
  <alias name="authorizationPolicy" alias="IAuthorizationPolicy"/>

  <!-- actual bean defined in repository.spring.xml; aliased here -->
  <alias name="roleAuthorizationPolicyRoleBindingDaoTxn" alias="IRoleAuthorizationPolicyRoleBindingDao"/>

  <!-- Reference to a bean in one of the applicationContext-pentaho-security-*.xml; selected by configured provider-->
  <pen:bean id="activeUserRoleListService" class="org.pentaho.platform.api.engine.IUserRoleListService">
    <pen:attributes>
      <pen:attr key="providerName" value="${security.provider}"/>
    </pen:attributes>
  </pen:bean>

  <!-- A composite bean composed of the activeUserRoleListService and systemUserRoleListService -->
  <bean id="IUserRoleListService" class="org.pentaho.platform.plugin.services.security.userrole.CompositeUserRoleListService">
    <constructor-arg>
      <list>
        <ref bean="activeUserRoleListService"/>
      </list>
    </constructor-arg>
    <pen:publish as-type="INTERFACES">
      <pen:attributes>
        <pen:attr key="priority" value="50"/>
      </pen:attributes>
    </pen:publish>
  </bean>

  <!-- Reference to a bean in one of the applicationContext-pentaho-security-*.xml; selected by configured provider-->
  <pen:bean id="activeUserDetailsService" class="org.springframework.security.core.userdetails.UserDetailsService">
    <pen:attributes>
      <pen:attr key="providerName" value="${security.provider}"/>
    </pen:attributes>
  </pen:bean>

  <bean id="UserDetailsService" class="org.pentaho.platform.plugin.services.security.userrole.ChainedUserDetailsService">
    <constructor-arg>
      <list>
        <ref bean="activeUserDetailsService"/>
      </list>
    </constructor-arg>
  </bean>

  <bean id="ehCacheUserCache" class="org.springframework.security.core.userdetails.cache.NullUserCache" />

  <bean id="cachingUserDetailsService" class="org.pentaho.platform.plugin.services.security.userrole.PentahoCachingUserDetailsService">
    <constructor-arg>
      <ref bean="UserDetailsService"/>
    </constructor-arg>
    <constructor-arg ref="tenantedUserNameUtils"/>
    <property name="userCache" ref="ehCacheUserCache"/>

    <pen:publish as-type="INTERFACES">
      <pen:attributes>
        <pen:attr key="priority" value="50"/>
      </pen:attributes>
    </pen:publish>
  </bean>

  <pen:bean class="org.springframework.security.authentication.AuthenticationProvider">
    <pen:attributes>
      <pen:attr key="providerName" value="${security.provider}"/>
    </pen:attributes>
    <pen:publish as-type="ALL">
      <pen:attributes>
        <pen:attr key="priority" value="50"/>
      </pen:attributes>
    </pen:publish>
  </pen:bean>

  <!-- actual bean defined in applicationContext-spring-security.xml; aliased here -->
  <alias name="authenticationManager" alias="AuthenticationManager"/>

</beans>
